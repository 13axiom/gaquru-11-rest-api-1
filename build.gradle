plugins {
    id 'java-library'
   // id 'io.qameta.allure' version '2.9.6'
}

repositories {
    mavenCentral()
}

def junitVersion = "5.8.2"

dependencies {
    testImplementation(
            "io.rest-assured:rest-assured:5.0.1",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:1.7.36",
            "com.codeborne:selenide:6.2.1",
            'com.google.code.gson:gson:2.9.0',
            "org.assertj:assertj-core:3.22.0",
    "io.rest-assured:json-schema-validator:3.0.0")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    if (System.getProperty("threads") != null) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': System.getProperty("threads").toInteger()
        ]
    }

    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}
